{"version":3,"sources":["px-app-header/px-app-header-scroll-effect.es6.js"],"names":["Polymer","AppLayout","registerEffect","setUp","config","navContainer","navElement","dom","querySelector","navHeight","parseInt","getComputedStyle","height","style","willChange","headerContainer","headerElement","headerHeight","run","progress","dy","transform","tearDown"],"mappings":"aAAA,CAAC,UAAW,CACVA,QAAQC,SAAR,CAAkBC,cAAlB,CAAiC,6BAAjC,CAAgE,CAC9DC,MAAO,eAASC,MAAT,CAAiB,CAEtB,KAAKC,YAAL,CAAoB,CAAEC,WAAYN,QAAQO,GAAR,CAAY,IAAZ,EAAkBC,aAAlB,CAAgC,iBAAhC,CAAd,CAApB,CACA,KAAKH,YAAL,CAAkBI,SAAlB,CAA8BC,SAASC,iBAAiB,KAAKN,YAAL,CAAkBC,UAAnC,EAA+CM,MAAxD,CAAgE,EAAhE,CAA9B,CACA,KAAKP,YAAL,CAAkBC,UAAlB,CAA6BO,KAA7B,CAAmCC,UAAnC,CAAgD,WAAhD,CACA,KAAKC,eAAL,CAAuB,CAAEC,cAAehB,QAAQO,GAAR,CAAY,IAAZ,EAAkBC,aAAlB,CAAgC,oBAAhC,CAAjB,CAAvB,CACA,KAAKO,eAAL,CAAqBE,YAArB,CAAoCP,SAASC,iBAAiB,KAAKI,eAAL,CAAqBC,aAAtC,EAAqDJ,MAA9D,CAAsE,EAAtE,CACrC,CAR6D,CAU9DM,IAAK,aAASC,QAAT,CAAmB,CACtB,GAAIC,IAAM,CAAC,KAAKf,YAAL,CAAkBI,SAAlB,CAA8B,KAAKM,eAAL,CAAqBE,YAAnD,CAAkE,CAAnE,EAAwEE,QAAlF,CACA,KAAKE,SAAL,eAA6BD,EAA7B,OAAsC,KAAKf,YAAL,CAAkBC,UAAxD,CACD,CAb6D,CAe9DgB,SAAU,mBAAW,CAElB,KAAKjB,YAAL,CAAkBC,UAAlB,CAA6BO,KAA7B,CAAmCC,UAAnC,CAAgD,MAAhD,CACA,MAAO,MAAKT,YAAZ,CACA,MAAO,MAAKU,eACd,CApB6D,CAAhE,CAsBD,CAvBD","file":"px-app-header-scroll-effect.js","sourcesContent":["(function() {\n  Polymer.AppLayout.registerEffect('px-app-header-scroll-effect', {\n    setUp: function(config) {\n      // the effect's config is passed to the setUp.\n      this.navContainer = { navElement: Polymer.dom(this).querySelector('[nav-container]') };\n      this.navContainer.navHeight = parseInt(getComputedStyle(this.navContainer.navElement).height, 10);\n      this.navContainer.navElement.style.willChange = 'transform';\n      this.headerContainer = { headerElement: Polymer.dom(this).querySelector('[header-container]') };\n      this.headerContainer.headerHeight = parseInt(getComputedStyle(this.headerContainer.headerElement).height, 10);\n    },\n\n    run: function(progress) {\n      let dy = ((this.navContainer.navHeight - this.headerContainer.headerHeight + 5) * progress);\n      this.transform(`translateY(${dy}px)`, this.navContainer.navElement);\n    },\n\n    tearDown: function() {\n       // clean up and reset of states\n       this.navContainer.navElement.style.willChange = \"auto\";\n       delete this.navContainer;\n       delete this.headerContainer;\n    }\n  });\n})();\n"]}